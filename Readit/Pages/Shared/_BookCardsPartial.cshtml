@using System.ComponentModel.DataAnnotations
@using System.Reflection

@functions {
    string GetDisplayName(Enum value)
    {
        return value.GetType()
            .GetMember(value.ToString())
            .First()
            .GetCustomAttribute<DisplayAttribute>()?.GetName() ?? value.ToString();
    }
}


@model List<Readit.Api.Models.OpenLibraryBook>

@foreach (var book in Model)
{<div class="col">
        <div class="card h-100 d-flex flex-column" style="height: 100%;">
            <a href="@Url.Page("/BookDetails", new { workKey = book.Key.Split('/').Last() })" style="text-decoration: none; color: inherit;">
                <div class="d-flex align-items-center justify-content-center bg-light"
                     style="height: 300px; overflow: hidden;">
                    @if (book.CoverId.HasValue)
                    {
                        <img src="https://covers.openlibrary.org/b/id/@(book.CoverId)-L.jpg"
                             class="img-fluid" style="max-height: 100%; max-width: 100%;" />
                    }
                    else
                    {
                        <img src="~/images/NoCover.png"
                             class="img-fluid" style="max-height: 100%; max-width: 100%;" alt="No Cover" />
                    }
                </div>

                <div class="card-body d-flex flex-column justify-content-between" style="min-height: 130px;">
                    <h5 class="card-title">@book.Title</h5>
                    <p class="card-text">@string.Join(", ", book.AuthorName ?? new List<string> { "Unknown" })</p>
                </div>
            </a>

            <div class="card-footer bg-white border-0 mt-auto">
                <button type="button"
                        class="btn btn-sm w-100 @(book.IsInLibrary ? "btn-danger" : "btn-outline-primary")"
                        onclick='event.stopPropagation(); toggleLibrary(this, {
                        title: @Json.Serialize(book.Title),
                        author_name: @Html.Raw(Json.Serialize(book.AuthorName ?? new List<string>())),
                        cover_i: @(book.CoverId ?? 0),
                        key: @Json.Serialize(book.Key)
                    })'>
                    @(book.IsInLibrary ? "Remove" : "Add to Library")
                </button>
            </div>
        </div>
    </div>
}
