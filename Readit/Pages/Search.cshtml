@page
@model Readit.Pages.Search
<div class="d-flex gap-3 mb-3">
    <button type="button" class="btn @(Model.Mode == "books" ? "btn-primary" : "btn-outline-primary")"
            onclick="switchMode('books')">Books</button>

    <button type="button" class="btn @(Model.Mode == "friends" ? "btn-primary" : "btn-outline-primary")"
            onclick="switchMode('friends')">Friends</button>
</div>

<form method="post">
    <input type="hidden" name="Mode" value="@Model.Mode" id="modeInput" />
    <input asp-for="Query" placeholder="Search for a book..."/>
    <button type="submit">Search</button>
</form>

@if (Model.Mode == "books")
{
    <div id="bookGrid" class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
        @await Html.PartialAsync("_BookCardsPartial", Model.Books)
    </div>
}
else if (Model.Mode == "friends")
{
    <div class="list-group">
        @foreach (var user in Model.Users)
        {
            <div class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                    <strong>@user.FirstName @user.LastName</strong>
                </div>
                <a asp-page="/UserPage" asp-route-id="@user.Id" class="btn btn-outline-secondary">View Profile</a>
            </div>
        }
    </div>
}


@section Scripts {
    <script>
        let offset = 12;
        let loading = false;

        window.addEventListener('scroll', async () => {
            if (loading) return;
            if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 100) {
                loading = true;
                const response = await fetch(`/Search?handler=More&query=@Model.Query&offset=${offset}`);
                const html = await response.text();
                document.getElementById("bookGrid").insertAdjacentHTML("beforeend", html);
                offset += 12;
                loading = false;
            }
        });

        async function toggleLibrary(button, book) {
            const response = await fetch("/Search?handler=Toggle", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(book)
            });

            const result = await response.json();

            if (result.unauthorized) {
                alert("‚ùå You must be logged in to add books to your library.");
                return;
            }

            if (result.added) {
                button.innerText = "Remove";
                button.classList.remove("btn-outline-primary");
                button.classList.add("btn-danger");
            } else {
                button.innerText = "Add to Library";
                button.classList.remove("btn-danger");
                button.classList.add("btn-outline-primary");
            }
        }
        
        function switchMode(mode) {
            document.getElementById('modeInput').value = mode;
            document.forms[0].submit();
        }
    </script>
}